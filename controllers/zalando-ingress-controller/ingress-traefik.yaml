apiVersion: v1
kind: ServiceAccount
metadata:
  name:  aws-ingress-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: aws-ingress-controller
rules:
- apiGroups: ["extensions"]
  resources: ["ingresses", ]
  verbs: ["get", "list"]
- apiGroups: ["extensions"]
  resources: ["ingresses/status", ]
  verbs: ["get", "list", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "services", "endpoints"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: aws-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-ingress-controller
subjects:
- kind: ServiceAccount
  name: aws-ingress-controller
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-ingress-aws-controller
  namespace: kube-system
  labels:
    application: kube-ingress-aws-controller
    component: ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      application: kube-ingress-aws-controller
      component: ingress
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: ${iam_role}
      labels:
        application: kube-ingress-aws-controller
        component: ingress
    spec:
      serviceAccount: aws-ingress-controller
      containers:
      - name: controller
        image: registry.opensource.zalan.do/teapot/kube-ingress-aws-controller:v0.8.1
        env:
        - name: AWS_REGION
          value: ${region}
        args:
          - --health-check-path=/ping
          - --health-check-port=8080
          - --target-port=9999
          - --ingress-class-filter=alb-traefik
          - --controller-id=traefik-gw